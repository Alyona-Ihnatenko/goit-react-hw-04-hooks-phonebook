{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactsList/ContactsList.module.css","Filter/Filter.module.css","components/Button/Button.module.css","components/Button/Button.jsx","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactsList.jsx","Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","Button","type","buttonName","handleClick","id","className","css","button","onClick","ContactForm","handleSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","reset","form","onSubmit","preventDefault","uuidv4","htmlFor","input","onChange","pattern","title","required","ContactsList","contactsList","handleRemove","list","map","item","currentTarget","Filter","label","App","JSON","parse","localStorage","getItem","contacts","setContacts","filter","setFilter","useEffect","window","setItem","stringify","visibleContacts","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","nextContact","some","toLocaleLowerCase","alert","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e168ef8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1EPtL\",\"input\":\"ContactForm_input__1RhfR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2cHuf\",\"item\":\"ContactsList_item__1AVl_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__9fC07\",\"input\":\"Filter_input__2MXr9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3s09h\"};","import PropTypes from 'prop-types';\nimport css from './Button.module.css';\nfunction Button({ type, buttonName, handleClick, id }) {\n  return (\n    <button className={css.button} onClick={handleClick} id={id} type={type}>\n      {buttonName}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  type: PropTypes.string,\n  buttonName: PropTypes.string,\n  handleClick: PropTypes.func,\n};\n\nexport default Button;\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport css from './ContactForm.module.css';\nimport Button from '../Button/Button';\n\nfunction ContactForm({ handleSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    handleSubmit({ name, number, id: uuidv4() });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={onSubmit}>\n      <label htmlFor={uuidv4()}>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          onChange={handleChange}\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label htmlFor={uuidv4()}>\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          onChange={handleChange}\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <Button type=\"submit\" buttonName=\"Add contact\" />\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport css from './ContactsList.module.css';\nimport Button from '../Button/Button';\n\nfunction ContactsList({ contactsList, handleRemove }) {\n  return (\n    <ul className={css.list}>\n      {contactsList.map(({ id, name, number }) => {\n        return (\n          <li className={css.item} key={id}>\n            <p>\n              {name}: {number}{' '}\n            </p>\n            <Button\n              type=\"button\"\n              handleClick={e => {\n                handleRemove(e.currentTarget.id);\n              }}\n              buttonName=\"Delete\"\n              id={id}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\nContactsList.propTypes = {\n  contactsList: PropTypes.array,\n  handleRemove: PropTypes.func,\n};\n\nexport default ContactsList;\n","import PropTypes from 'prop-types';\nimport css from './Filter.module.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction Filter({ onChange }) {\n  return (\n    <label className={css.label} htmlFor={uuidv4()}>\n      Find contacts by name\n      <input\n        className={css.input}\n        type=\"text\"\n        onChange={onChange}\n        name=\"filter\"\n        required\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport Filter from './Filter/Filter';\nimport './App.css';\n\nfunction App() {\n  const [contacts, setContacts] = useState([\n    ...(JSON.parse(localStorage.getItem('contacts')) ?? ''),\n  ]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = nextContact => {\n    const sameName = contacts.some(\n      contact =>\n        contact.name.toLocaleLowerCase() ===\n        nextContact.name.toLocaleLowerCase(),\n    );\n    if (sameName) {\n      alert(`${nextContact.name} is already in contacts`);\n    } else {\n      setContacts(prevState => [nextContact, ...prevState]);\n    }\n  };\n\n  const handleRemove = id => {\n    setContacts(prevState => {\n      return prevState.filter(contact => contact.id !== id);\n    });\n  };\n\n  const changeFilter = e => {\n    setFilter(e.target.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(normalizedFilter);\n    });\n  };\n\n  const visibleContacts = getVisibleContacts();\n  return (\n    <div className=\"container\">\n      <h1 className=\"mainTitle\">Phonebook</h1>\n      <ContactForm handleSubmit={addContact} />\n      <h2 className=\"contactsTitle\">Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactsList\n        contactsList={visibleContacts}\n        handleRemove={handleRemove}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}